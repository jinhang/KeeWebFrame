/**
 * This class is generated by jOOQ
 */
package cn.kee.model.tables;


import com.kee.model.tables.records.DatabasechangelogRecord;

import cn.kee.model.Ewp;
import cn.kee.model.Keys;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Databasechangelog extends TableImpl<DatabasechangelogRecord> {

	private static final long serialVersionUID = 1800932794;

	/**
	 * The reference instance of <code>ewp.databasechangelog</code>
	 */
	public static final Databasechangelog DATABASECHANGELOG = new Databasechangelog();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DatabasechangelogRecord> getRecordType() {
		return DatabasechangelogRecord.class;
	}

	/**
	 * The column <code>ewp.databasechangelog.ID</code>.
	 */
	public final TableField<DatabasechangelogRecord, String> ID = createField("ID", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

	/**
	 * The column <code>ewp.databasechangelog.AUTHOR</code>.
	 */
	public final TableField<DatabasechangelogRecord, String> AUTHOR = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

	/**
	 * The column <code>ewp.databasechangelog.FILENAME</code>.
	 */
	public final TableField<DatabasechangelogRecord, String> FILENAME = createField("FILENAME", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

	/**
	 * The column <code>ewp.databasechangelog.DATEEXECUTED</code>.
	 */
	public final TableField<DatabasechangelogRecord, Timestamp> DATEEXECUTED = createField("DATEEXECUTED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>ewp.databasechangelog.MD5SUM</code>.
	 */
	public final TableField<DatabasechangelogRecord, String> MD5SUM = createField("MD5SUM", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

	/**
	 * The column <code>ewp.databasechangelog.DESCRIPTION</code>.
	 */
	public final TableField<DatabasechangelogRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>ewp.databasechangelog.COMMENTS</code>.
	 */
	public final TableField<DatabasechangelogRecord, String> COMMENTS = createField("COMMENTS", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>ewp.databasechangelog.TAG</code>.
	 */
	public final TableField<DatabasechangelogRecord, String> TAG = createField("TAG", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>ewp.databasechangelog.LIQUIBASE</code>.
	 */
	public final TableField<DatabasechangelogRecord, String> LIQUIBASE = createField("LIQUIBASE", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

	/**
	 * Create a <code>ewp.databasechangelog</code> table reference
	 */
	public Databasechangelog() {
		this("databasechangelog", null);
	}

	/**
	 * Create an aliased <code>ewp.databasechangelog</code> table reference
	 */
	public Databasechangelog(String alias) {
		this(alias, DATABASECHANGELOG);
	}

	private Databasechangelog(String alias, Table<DatabasechangelogRecord> aliased) {
		this(alias, aliased, null);
	}

	private Databasechangelog(String alias, Table<DatabasechangelogRecord> aliased, Field<?>[] parameters) {
		super(alias, Ewp.EWP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DatabasechangelogRecord> getPrimaryKey() {
		return Keys.KEY_DATABASECHANGELOG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DatabasechangelogRecord>> getKeys() {
		return Arrays.<UniqueKey<DatabasechangelogRecord>>asList(Keys.KEY_DATABASECHANGELOG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog as(String alias) {
		return new Databasechangelog(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Databasechangelog rename(String name) {
		return new Databasechangelog(name, null);
	}
}
