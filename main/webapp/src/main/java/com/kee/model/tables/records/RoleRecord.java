/**
 * This class is generated by jOOQ
 */
package com.kee.model.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import cn.kee.model.tables.Role;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "role", schema = "ewp")
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record6<String, String, Integer, String, String, Integer> {

	private static final long serialVersionUID = 1297818820;

	/**
	 * Setter for <code>ewp.role.roleid</code>.
	 */
	public void setRoleid(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ewp.role.roleid</code>.
	 */
	@Id
	@Column(name = "roleid", unique = true, nullable = false, length = 32)
	public String getRoleid() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>ewp.role.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ewp.role.name</code>.
	 */
	@Column(name = "name", length = 32)
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>ewp.role.type</code>.
	 */
	public void setType(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ewp.role.type</code>.
	 */
	@Column(name = "type", precision = 10)
	public Integer getType() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>ewp.role.parentid</code>.
	 */
	public void setParentid(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>ewp.role.parentid</code>.
	 */
	@Column(name = "parentid", length = 32)
	public String getParentid() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>ewp.role.clientid</code>.
	 */
	public void setClientid(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>ewp.role.clientid</code>.
	 */
	@Column(name = "clientid", length = 32)
	public String getClientid() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>ewp.role.status</code>.
	 */
	public void setStatus(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>ewp.role.status</code>.
	 */
	@Column(name = "status", precision = 10)
	public Integer getStatus() {
		return (Integer) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, Integer, String, String, Integer> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, Integer, String, String, Integer> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Role.ROLE.ROLEID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Role.ROLE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Role.ROLE.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Role.ROLE.PARENTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Role.ROLE.CLIENTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Role.ROLE.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getRoleid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getParentid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getClientid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoleRecord value1(String value) {
		setRoleid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoleRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoleRecord value3(Integer value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoleRecord value4(String value) {
		setParentid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoleRecord value5(String value) {
		setClientid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoleRecord value6(Integer value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoleRecord values(String value1, String value2, Integer value3, String value4, String value5, Integer value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RoleRecord
	 */
	public RoleRecord() {
		super(Role.ROLE);
	}

	/**
	 * Create a detached, initialised RoleRecord
	 */
	public RoleRecord(String roleid, String name, Integer type, String parentid, String clientid, Integer status) {
		super(Role.ROLE);

		setValue(0, roleid);
		setValue(1, name);
		setValue(2, type);
		setValue(3, parentid);
		setValue(4, clientid);
		setValue(5, status);
	}
}
