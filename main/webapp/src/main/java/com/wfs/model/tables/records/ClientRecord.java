/**
 * This class is generated by jOOQ
 */
package com.wfs.model.tables.records;


import com.wfs.model.tables.Client;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "client", schema = "ewp")
public class ClientRecord extends UpdatableRecordImpl<ClientRecord> implements Record7<String, String, Integer, String, String, Integer, String> {

	private static final long serialVersionUID = 1293304381;

	/**
	 * Setter for <code>ewp.client.clientid</code>.
	 */
	public void setClientid(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ewp.client.clientid</code>.
	 */
	@Id
	@Column(name = "clientid", unique = true, nullable = false, length = 32)
	public String getClientid() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>ewp.client.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ewp.client.name</code>.
	 */
	@Column(name = "name", length = 32)
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>ewp.client.type</code>.
	 */
	public void setType(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ewp.client.type</code>.
	 */
	@Column(name = "type", precision = 10)
	public Integer getType() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>ewp.client.address</code>.
	 */
	public void setAddress(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>ewp.client.address</code>.
	 */
	@Column(name = "address", length = 32)
	public String getAddress() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>ewp.client.phone</code>.
	 */
	public void setPhone(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>ewp.client.phone</code>.
	 */
	@Column(name = "phone", length = 32)
	public String getPhone() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>ewp.client.status</code>.
	 */
	public void setStatus(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>ewp.client.status</code>.
	 */
	@Column(name = "status", precision = 10)
	public Integer getStatus() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>ewp.client.memo</code>.
	 */
	public void setMemo(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>ewp.client.memo</code>.
	 */
	@Column(name = "memo", length = 64)
	public String getMemo() {
		return (String) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, String, Integer, String, String, Integer, String> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, String, Integer, String, String, Integer, String> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Client.CLIENT.CLIENTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Client.CLIENT.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Client.CLIENT.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Client.CLIENT.ADDRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Client.CLIENT.PHONE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Client.CLIENT.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Client.CLIENT.MEMO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getClientid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getAddress();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getPhone();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getMemo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClientRecord value1(String value) {
		setClientid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClientRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClientRecord value3(Integer value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClientRecord value4(String value) {
		setAddress(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClientRecord value5(String value) {
		setPhone(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClientRecord value6(Integer value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClientRecord value7(String value) {
		setMemo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClientRecord values(String value1, String value2, Integer value3, String value4, String value5, Integer value6, String value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ClientRecord
	 */
	public ClientRecord() {
		super(Client.CLIENT);
	}

	/**
	 * Create a detached, initialised ClientRecord
	 */
	public ClientRecord(String clientid, String name, Integer type, String address, String phone, Integer status, String memo) {
		super(Client.CLIENT);

		setValue(0, clientid);
		setValue(1, name);
		setValue(2, type);
		setValue(3, address);
		setValue(4, phone);
		setValue(5, status);
		setValue(6, memo);
	}
}
