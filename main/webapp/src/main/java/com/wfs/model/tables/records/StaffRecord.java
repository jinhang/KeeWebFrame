/**
 * This class is generated by jOOQ
 */
package com.wfs.model.tables.records;


import com.wfs.model.tables.Staff;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "staff", schema = "ewp")
public class StaffRecord extends UpdatableRecordImpl<StaffRecord> implements Record10<String, String, Integer, String, String, String, Integer, Integer, String, Timestamp> {

	private static final long serialVersionUID = 690316876;

	/**
	 * Setter for <code>ewp.staff.staffid</code>.
	 */
	public void setStaffid(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ewp.staff.staffid</code>.
	 */
	@Id
	@Column(name = "staffid", unique = true, nullable = false, length = 32)
	public String getStaffid() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>ewp.staff.clientid</code>.
	 */
	public void setClientid(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ewp.staff.clientid</code>.
	 */
	@Column(name = "clientid", length = 32)
	public String getClientid() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>ewp.staff.type</code>.
	 */
	public void setType(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ewp.staff.type</code>.
	 */
	@Column(name = "type", precision = 10)
	public Integer getType() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>ewp.staff.sex</code>.
	 */
	public void setSex(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>ewp.staff.sex</code>.
	 */
	@Column(name = "sex", length = 32)
	public String getSex() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>ewp.staff.username</code>.
	 */
	public void setUsername(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>ewp.staff.username</code>.
	 */
	@Column(name = "username", length = 32)
	public String getUsername() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>ewp.staff.password</code>.
	 */
	public void setPassword(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>ewp.staff.password</code>.
	 */
	@Column(name = "password", length = 32)
	public String getPassword() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>ewp.staff.status</code>.
	 */
	public void setStatus(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>ewp.staff.status</code>.
	 */
	@Column(name = "status", precision = 10)
	public Integer getStatus() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>ewp.staff.ismaster</code>.
	 */
	public void setIsmaster(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>ewp.staff.ismaster</code>.
	 */
	@Column(name = "ismaster", precision = 10)
	public Integer getIsmaster() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>ewp.staff.name</code>.
	 */
	public void setName(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>ewp.staff.name</code>.
	 */
	@Column(name = "name", length = 32)
	public String getName() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>ewp.staff.lastlogintime</code>.
	 */
	public void setLastlogintime(Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>ewp.staff.lastlogintime</code>.
	 */
	@Column(name = "lastlogintime")
	public Timestamp getLastlogintime() {
		return (Timestamp) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<String, String, Integer, String, String, String, Integer, Integer, String, Timestamp> fieldsRow() {
		return (Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<String, String, Integer, String, String, String, Integer, Integer, String, Timestamp> valuesRow() {
		return (Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Staff.STAFF.STAFFID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Staff.STAFF.CLIENTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Staff.STAFF.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Staff.STAFF.SEX;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Staff.STAFF.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Staff.STAFF.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Staff.STAFF.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return Staff.STAFF.ISMASTER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Staff.STAFF.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field10() {
		return Staff.STAFF.LASTLOGINTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getStaffid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getClientid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getSex();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getIsmaster();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value10() {
		return getLastlogintime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value1(String value) {
		setStaffid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value2(String value) {
		setClientid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value3(Integer value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value4(String value) {
		setSex(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value5(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value6(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value7(Integer value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value8(Integer value) {
		setIsmaster(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value9(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value10(Timestamp value) {
		setLastlogintime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord values(String value1, String value2, Integer value3, String value4, String value5, String value6, Integer value7, Integer value8, String value9, Timestamp value10) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StaffRecord
	 */
	public StaffRecord() {
		super(Staff.STAFF);
	}

	/**
	 * Create a detached, initialised StaffRecord
	 */
	public StaffRecord(String staffid, String clientid, Integer type, String sex, String username, String password, Integer status, Integer ismaster, String name, Timestamp lastlogintime) {
		super(Staff.STAFF);

		setValue(0, staffid);
		setValue(1, clientid);
		setValue(2, type);
		setValue(3, sex);
		setValue(4, username);
		setValue(5, password);
		setValue(6, status);
		setValue(7, ismaster);
		setValue(8, name);
		setValue(9, lastlogintime);
	}
}
